-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TABLE test_change(a INT, b STRING, c INT) using parquet
-- !query schema
struct<>
-- !query output



-- !query
DESC test_change
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
b                   	string              	                    
c                   	int


-- !query
ALTER TABLE test_change CHANGE a
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{"errorClass":"legacy","messageParameters":{"message":"\nOperation not allowed: ALTER TABLE table CHANGE COLUMN requires a TYPE, a SET/DROP, a COMMENT, or a FIRST/AFTER(line 1, pos 0)\n\n== SQL ==\nALTER TABLE test_change CHANGE a\n^^^\n"},"queryContext":[]}


-- !query
DESC test_change
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
b                   	string              	                    
c                   	int


-- !query
ALTER TABLE test_change RENAME COLUMN a TO a1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"legacy","messageParameters":{"message":"RENAME COLUMN is only supported with v2 tables."},"queryContext":[]}


-- !query
DESC test_change
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
b                   	string              	                    
c                   	int


-- !query
ALTER TABLE test_change CHANGE a TYPE STRING
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"legacy","messageParameters":{"message":"ALTER TABLE CHANGE COLUMN is not supported for changing column 'a' with type 'IntegerType' to 'a' with type 'StringType'"},"queryContext":[]}


-- !query
DESC test_change
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
b                   	string              	                    
c                   	int


-- !query
ALTER TABLE test_change CHANGE a AFTER b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"legacy","messageParameters":{"message":"ALTER COLUMN ... FIRST | ALTER is only supported with v2 tables."},"queryContext":[]}


-- !query
ALTER TABLE test_change CHANGE b FIRST
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"legacy","messageParameters":{"message":"ALTER COLUMN ... FIRST | ALTER is only supported with v2 tables."},"queryContext":[]}


-- !query
DESC test_change
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
b                   	string              	                    
c                   	int


-- !query
ALTER TABLE test_change CHANGE a COMMENT 'this is column a'
-- !query schema
struct<>
-- !query output



-- !query
ALTER TABLE test_change CHANGE b COMMENT '#*02?`'
-- !query schema
struct<>
-- !query output



-- !query
ALTER TABLE test_change CHANGE c COMMENT ''
-- !query schema
struct<>
-- !query output



-- !query
DESC test_change
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	this is column a    
b                   	string              	#*02?`              
c                   	int


-- !query
ALTER TABLE test_change CHANGE a TYPE INT
-- !query schema
struct<>
-- !query output



-- !query
ALTER TABLE test_change CHANGE a COMMENT 'this is column a'
-- !query schema
struct<>
-- !query output



-- !query
DESC test_change
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	this is column a    
b                   	string              	#*02?`              
c                   	int


-- !query
ALTER TABLE test_change CHANGE invalid_col TYPE INT
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"legacy","messageParameters":{"message":"Missing field invalid_col in table spark_catalog.default.test_change with schema:\nroot\n |-- a: integer (nullable = true)\n |-- b: string (nullable = true)\n |-- c: integer (nullable = true)\n; line 1 pos 0"},"queryContext":[]}


-- !query
DESC test_change
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	this is column a    
b                   	string              	#*02?`              
c                   	int


-- !query
ALTER TABLE test_change CHANGE A COMMENT 'case insensitivity'
-- !query schema
struct<>
-- !query output



-- !query
DESC test_change
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	case insensitivity  
b                   	string              	#*02?`              
c                   	int


-- !query
CREATE TEMPORARY VIEW temp_view(a, b) AS SELECT 1, "one"
-- !query schema
struct<>
-- !query output



-- !query
ALTER TABLE temp_view CHANGE a TYPE INT
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"legacy","messageParameters":{"message":"temp_view is a temp view. 'ALTER TABLE ... CHANGE COLUMN' expects a table.; line 1 pos 12"},"queryContext":[]}


-- !query
CREATE GLOBAL TEMPORARY VIEW global_temp_view(a, b) AS SELECT 1, "one"
-- !query schema
struct<>
-- !query output



-- !query
ALTER TABLE global_temp.global_temp_view CHANGE a TYPE INT
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"legacy","messageParameters":{"message":"global_temp.global_temp_view is a temp view. 'ALTER TABLE ... CHANGE COLUMN' expects a table.; line 1 pos 12"},"queryContext":[]}


-- !query
DROP TABLE test_change
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW global_temp.global_temp_view
-- !query schema
struct<>
-- !query output

