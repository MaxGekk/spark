-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 10


-- !query 0
describe function from_csv
-- !query 0 schema
struct<function_desc:string>
-- !query 0 output
Class: org.apache.spark.sql.catalyst.expressions.CsvToStructs
Function: from_csv
Usage: from_csv(csvStr, schema[, options]) - Returns a struct value with the given `csvStr` and `schema`.


-- !query 1
describe function extended from_csv
-- !query 1 schema
struct<function_desc:string>
-- !query 1 output
Class: org.apache.spark.sql.catalyst.expressions.CsvToStructs
Extended Usage:
    Examples:
      > SELECT from_csv('1, 0.8', 'a INT, b DOUBLE');
       {"a":1, "b":0.8}
  
    Since: 3.0.0

Function: from_csv
Usage: from_csv(csvStr, schema[, options]) - Returns a struct value with the given `csvStr` and `schema`.


-- !query 2
select from_csv('1', 'a INT')
-- !query 2 schema
struct<csvtostructs(1):struct<a:int>>
-- !query 2 output
{"a":1}


-- !query 3
select from_csv('1, 3.14', 'a INT, f FLOAT')
-- !query 3 schema
struct<csvtostructs(1, 3.14):struct<a:int,f:float>>
-- !query 3 output
{"a":1,"f":3.14}


-- !query 4
select from_csv('26/08/2015', 'time Timestamp', map('timestampFormat', 'dd/MM/yyyy'))
-- !query 4 schema
struct<csvtostructs(26/08/2015):struct<time:timestamp>>
-- !query 4 output
{"time":2015-08-26 00:00:00.0}


-- !query 5
select from_csv('1', 1)
-- !query 5 schema
struct<>
-- !query 5 output
org.apache.spark.sql.AnalysisException
Schema should be specified in DDL format as a string literal instead of 1;; line 1 pos 7


-- !query 6
select from_csv('1', 'a InvalidType')
-- !query 6 schema
struct<>
-- !query 6 output
org.apache.spark.sql.AnalysisException

DataType invalidtype is not supported.(line 1, pos 2)

== SQL ==
a InvalidType
--^^^
; line 1 pos 7


-- !query 7
select from_csv('1', 'a INT', named_struct('mode', 'PERMISSIVE'))
-- !query 7 schema
struct<>
-- !query 7 output
org.apache.spark.sql.AnalysisException
Must use a map() function for options;; line 1 pos 7


-- !query 8
select from_csv('1', 'a INT', map('mode', 1))
-- !query 8 schema
struct<>
-- !query 8 output
org.apache.spark.sql.AnalysisException
A type of keys and values in map() must be string, but got map<string,int>;; line 1 pos 7


-- !query 9
select from_csv()
-- !query 9 schema
struct<>
-- !query 9 output
org.apache.spark.sql.AnalysisException
Invalid number of arguments for function from_csv. Expected: one of 2 and 3; Found: 0; line 1 pos 7
