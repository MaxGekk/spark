-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view tab_a as select * from values (1, 1) as tab_a(a1, b1)
-- !query schema
struct<>
-- !query output



-- !query
create temporary view tab_b as select * from values (1, 1) as tab_b(a2, b2)
-- !query schema
struct<>
-- !query output



-- !query
create temporary view struct_tab as select struct(col1 as a, col2 as b) as record from
 values (1, 1), (1, 2), (2, 1), (2, 2)
-- !query schema
struct<>
-- !query output



-- !query
select 1 from tab_a where (a1, b1) not in (select a2, b2 from tab_b)
-- !query schema
struct<1:int>
-- !query output



-- !query
select 1 from tab_a where (a1, b1) not in (select (a2, b2) from tab_b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "LEGACY",
  "messageParameters" : {
    "message" : "cannot resolve '(named_struct('a1', tab_a.a1, 'b1', tab_a.b1) IN (listquery()))' due to data type mismatch: \nThe number of columns in the left hand side of an IN subquery does not match the\nnumber of columns in the output of subquery.\n#columns in left hand side: 2.\n#columns in right hand side: 1.\nLeft side columns:\n[tab_a.a1, tab_a.b1].\nRight side columns:\n[`named_struct(a2, a2, b2, b2)`].; line 1 pos 35;\n'Project [unresolvedalias(1, None)]\n+- 'Filter NOT named_struct(a1, a1#x, b1, b1#x) IN (list#x [])\n   :  +- Project [named_struct(a2, a2#x, b2, b2#x) AS named_struct(a2, a2, b2, b2)#x]\n   :     +- SubqueryAlias tab_b\n   :        +- View (`tab_b`, [a2#x,b2#x])\n   :           +- Project [cast(a2#x as int) AS a2#x, cast(b2#x as int) AS b2#x]\n   :              +- Project [a2#x, b2#x]\n   :                 +- SubqueryAlias tab_b\n   :                    +- LocalRelation [a2#x, b2#x]\n   +- SubqueryAlias tab_a\n      +- View (`tab_a`, [a1#x,b1#x])\n         +- Project [cast(a1#x as int) AS a1#x, cast(b1#x as int) AS b1#x]\n            +- Project [a1#x, b1#x]\n               +- SubqueryAlias tab_a\n                  +- LocalRelation [a1#x, b1#x]\n"
  }
}


-- !query
select count(*) from struct_tab where record in
  (select (a2 as a, b2 as b) from tab_b)
-- !query schema
struct<count(1):bigint>
-- !query output
1


-- !query
select count(*) from struct_tab where record not in
  (select (a2 as a, b2 as b) from tab_b)
-- !query schema
struct<count(1):bigint>
-- !query output
3
