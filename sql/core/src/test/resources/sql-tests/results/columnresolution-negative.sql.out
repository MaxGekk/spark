-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE DATABASE mydb1
-- !query schema
struct<>
-- !query output



-- !query
USE mydb1
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t1 USING parquet AS SELECT 1 AS i1
-- !query schema
struct<>
-- !query output



-- !query
CREATE DATABASE mydb2
-- !query schema
struct<>
-- !query output



-- !query
USE mydb2
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t1 USING parquet AS SELECT 20 AS i1
-- !query schema
struct<>
-- !query output



-- !query
SET spark.sql.crossJoin.enabled = true
-- !query schema
struct<key:string,value:string>
-- !query output
spark.sql.crossJoin.enabled	true


-- !query
USE mydb1
-- !query schema
struct<>
-- !query output



-- !query
SELECT i1 FROM t1, mydb1.t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"legacy","messageParameters":["Reference 'i1' is ambiguous, could be: spark_catalog.mydb1.t1.i1, spark_catalog.mydb1.t1.i1.; line 1 pos 7"],"queryContext":[]}


-- !query
SELECT t1.i1 FROM t1, mydb1.t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"legacy","messageParameters":["Reference 't1.i1' is ambiguous, could be: spark_catalog.mydb1.t1.i1, spark_catalog.mydb1.t1.i1.; line 1 pos 7"],"queryContext":[]}


-- !query
SELECT mydb1.t1.i1 FROM t1, mydb1.t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"legacy","messageParameters":["Reference 'mydb1.t1.i1' is ambiguous, could be: spark_catalog.mydb1.t1.i1, spark_catalog.mydb1.t1.i1.; line 1 pos 7"],"queryContext":[]}


-- !query
SELECT i1 FROM t1, mydb2.t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"legacy","messageParameters":["Reference 'i1' is ambiguous, could be: spark_catalog.mydb1.t1.i1, spark_catalog.mydb2.t1.i1.; line 1 pos 7"],"queryContext":[]}


-- !query
SELECT t1.i1 FROM t1, mydb2.t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"legacy","messageParameters":["Reference 't1.i1' is ambiguous, could be: spark_catalog.mydb1.t1.i1, spark_catalog.mydb2.t1.i1.; line 1 pos 7"],"queryContext":[]}


-- !query
USE mydb2
-- !query schema
struct<>
-- !query output



-- !query
SELECT i1 FROM t1, mydb1.t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"legacy","messageParameters":["Reference 'i1' is ambiguous, could be: spark_catalog.mydb2.t1.i1, spark_catalog.mydb1.t1.i1.; line 1 pos 7"],"queryContext":[]}


-- !query
SELECT t1.i1 FROM t1, mydb1.t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"legacy","messageParameters":["Reference 't1.i1' is ambiguous, could be: spark_catalog.mydb2.t1.i1, spark_catalog.mydb1.t1.i1.; line 1 pos 7"],"queryContext":[]}


-- !query
SELECT i1 FROM t1, mydb2.t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"legacy","messageParameters":["Reference 'i1' is ambiguous, could be: spark_catalog.mydb2.t1.i1, spark_catalog.mydb2.t1.i1.; line 1 pos 7"],"queryContext":[]}


-- !query
SELECT t1.i1 FROM t1, mydb2.t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"legacy","messageParameters":["Reference 't1.i1' is ambiguous, could be: spark_catalog.mydb2.t1.i1, spark_catalog.mydb2.t1.i1.; line 1 pos 7"],"queryContext":[]}


-- !query
SELECT db1.t1.i1 FROM t1, mydb2.t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"UNRESOLVED_COLUMN","sqlState":"42000","messageParameters":["`db1`.`t1`.`i1`","`spark_catalog`.`mydb2`.`t1`.`i1`, `spark_catalog`.`mydb2`.`t1`.`i1`"],"queryContext":[]}


-- !query
SET spark.sql.crossJoin.enabled = false
-- !query schema
struct<key:string,value:string>
-- !query output
spark.sql.crossJoin.enabled	false


-- !query
USE mydb1
-- !query schema
struct<>
-- !query output



-- !query
SELECT mydb1.t1 FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"UNRESOLVED_COLUMN","sqlState":"42000","messageParameters":["`mydb1`.`t1`","`spark_catalog`.`mydb1`.`t1`.`i1`"],"queryContext":[]}


-- !query
SELECT t1.x.y.* FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"legacy","messageParameters":["cannot resolve 't1.x.y.*' given input columns 'i1'; line 1 pos 7"],"queryContext":[]}


-- !query
SELECT t1 FROM mydb1.t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"UNRESOLVED_COLUMN","sqlState":"42000","messageParameters":["`t1`","`spark_catalog`.`mydb1`.`t1`.`i1`"],"queryContext":[]}


-- !query
USE mydb2
-- !query schema
struct<>
-- !query output



-- !query
SELECT mydb1.t1.i1 FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{"errorClass":"UNRESOLVED_COLUMN","sqlState":"42000","messageParameters":["`mydb1`.`t1`.`i1`","`spark_catalog`.`mydb2`.`t1`.`i1`"],"queryContext":[]}


-- !query
DROP DATABASE mydb1 CASCADE
-- !query schema
struct<>
-- !query output



-- !query
DROP DATABASE mydb2 CASCADE
-- !query schema
struct<>
-- !query output

